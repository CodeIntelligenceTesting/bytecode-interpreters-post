#+OPTIONS: ^:nil num:nil p:nil timestamp:nil todo:nil date:nil creator:nil author:nil toc:nil
#+TITLE: Иголка в стоге сессий, или Байт-код регулярных выражений
* DONE Аннотация

  Семнадцать миллиардов событий, шестьдесят миллионов пользовательских сессий и невесть сколько
  виртуальных свиданий происходят в Badoo ежедневно. Каждое из событий аккуратно сохраняется в
  реляционные базы данных для последующего анализа на SQL и не только на нем. Современные
  распределенные тразакционные базы данных с их десятками терабайт данных - настоящее чудо
  современной инженерной мысли.

  Но SQL как воплощение реляционной алгебры в своих стандартных реализациях не позволяет
  формулировать запросы в терминах упорядоченных последовательностей кортежей.

  В последней из статей, посвященных виртуальным машинам, я расскажу про альтернативный подход:
  движок регулярных выражений ("Поросячий Матчер"), определенных на пользовательских сессиях.

* DONE Предыстория и задача



  Начнем с определений.

  /Событие/ состоит из типа события, времени, контекста и множества атрибутов, специфичных для каждого
  из типов.

  /Тип/ и /контекст/ каждого из событий это целые числа из предопределенных списков. Если с типами
  событий все понятно, то контекст это, например, номер экрана, на котором произошло заданное
  событие.

  /Атрибут/ события это просто какое-то целое число, смысл которого определяется типом события.

  /Сессия/ это последовательность событий, отсортированных по времени.

  Мы хотим находить сессии по запросами вида: "посчитать все сессии, где имеется указанная
  подпоследовательность событий", или "найти части сессии, описанные заданным шаблоном", или
  "вернуть часть ту часть сессии, которая случилась после заданного шаблона", или "посчитать,
  сколько сессий достигли определенных частей шаблона". Это может пригодиться для самых
  разнообразных практических анализов: поиск подозрительных сессий, вороночный анализ и т.д.

  Искомые подпоследовательности надо как-то описывать. В самом простой своей форме задачу можно
  свести к поиску подстроки; в идеале же нам хотелось бы иметь все возможности регулярных выражений.

* TODO Сравниваем по бумажке
* TODO Подпоследовательности событий
* TODO Раздвоение личности, или Ветвления в последовательностях
* TODO Регулярные выражения на событиях
* TODO Заключение
