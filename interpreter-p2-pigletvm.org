#+OPTIONS: ^:nil num:nil p:nil timestamp:nil todo:nil date:nil creator:nil author:nil toc:nil
#+TITLE: Полет свиньи (или оптимизация интерпретаторов байт-кода)
* DONE развитая стековая машина

  - [X] чтение байт-кода из файла

  - [X] специальный нулевой байт-код

  - [X] ассемлер, дизассемблер

  - [X] система тестов

  - [X] 16 bit args in the machine

  - [X] 16 bit args in assembler/disassembler

  - [X] печать значений со стека

  - [X] JUMP

  - [X] EQUAL/LESS/LESS_OR_EQUAL/GREATER/GREATER_OR_EQUAL/

  - [X] asm/disasm update

  - [X] JUMP_IF_TRUE/JUMP_IF_FALSE

  - [X] метки в ассемблере (создание и использование в JUMP-ах)

  - [X] DUP

  - [X] массив памяти, загрузка на стек и обратно

  - [X] поддержка памяти в асм

  - [X] обновить Makefile

* DONE решето Эратосфена в ассемблере для ПятачокВМ

  sieve.pvm

* DONE простые оптимизации

  - [X] замерить скорость без оптимизаций

    default optimisation:

    x100 - 1.5 с

    -O3:

    x100 - 0.6 с

  - [X] сравнить с питоном

    x100 - 4.5 с

  - [X] оставить тэг для неоптимизированного кода

  - [X] отпрофилировать все толком

    17/13% на функции работы со стеком, по умолчанию не инлайнились

  - [X] макросы для работы со стеком

    1.5 -> 1.25s

    теперь почти весь код работает через switch, который и занимает порядка 30% времени

  - [X] работа со стеком без замены значения

    1.25 -> 1.15s

  - [X] специальные байт-коды и нединамические суперинструкции

    PUSHI/LOADI

    1.15 -> 0.95s

    -O3:

    x100 - 0.45s

  - [X] range check

    -O3:  x100 - 0.41s

* DONE шитый код

  - [X] token threaded code

    0.95 -> 0.8

    -O3: 0.5s

* DONE кэш трасс

  - [X] non-jumping trace

  non-optimized: 1.2s

  -O3: 0.38s

  avg trace size: 4.42 (+1,2)

  - [X] jumping trace

  avg trace size: 5.1

  non-optimized:

  -O3: 0.36
* TODO libjit

  - [X] compile libjit

  - [X] come up with a simple example function

  - [X] pigletvm libjit plan

  - [ ] imitate an instruction pointer increment/decrement (using a pointer?)

  - [ ] imitate a stack push/pop/peek

  - [ ] imitate a setjump/longjump

  - [ ] imitate an instruction chain

  - [ ] plan the integration of jit

* TODO план статьи
